name: CI/CD Expo App

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        working-directory: ./mobile

      - name: Lint code
        run: npm run lint
        working-directory: ./mobile
        continue-on-error: true

      - name: Type check
        run: npm run typecheck
        working-directory: ./mobile
        continue-on-error: true

      - name: Run tests
        run: npm test -- --passWithNoTests
        working-directory: ./mobile
        continue-on-error: true

      - name: Build Expo app (web)
        run: npm run build:web
        working-directory: ./mobile
        continue-on-error: true

      - name: Install EAS CLI
        run: npm install -g @expo/eas-cli
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

      - name: EAS Build (Preview)
        run: eas build --platform all --profile preview --non-interactive
        working-directory: ./mobile
        if: github.ref == 'refs/heads/develop' && env.EXPO_TOKEN != ''
        continue-on-error: true

  security-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        working-directory: ./mobile

      - name: Audit dependencies for vulnerabilities
        run: npm audit --audit-level=moderate
        working-directory: ./mobile
        continue-on-error: true

      - name: Check for outdated dependencies
        run: npm outdated
        working-directory: ./mobile
        continue-on-error: true

  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and test Docker image
        run: |
          cd mobile
          docker build -t yeti-consult-app:test .
          docker run --rm yeti-consult-app:test npm test -- --passWithNoTests || true

# Security Best Practices:
# - Store all secrets (API keys, tokens) in GitHub repository secrets, not in code or .env files.
# - Never echo or print secrets in logs.
# - Use branch protection rules to require passing checks before merging.
# - Review audit and CodeQL results regularly.
# - EAS_TOKEN should be added to GitHub secrets for EAS builds. 